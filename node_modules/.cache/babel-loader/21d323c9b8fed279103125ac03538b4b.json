{"remainingRequest":"/Users/gerardojballesteros/Desktop/prueba videsk/frontend-junior-dev/node_modules/babel-loader/lib/index.js!/Users/gerardojballesteros/Desktop/prueba videsk/frontend-junior-dev/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/gerardojballesteros/Desktop/prueba videsk/frontend-junior-dev/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/gerardojballesteros/Desktop/prueba videsk/frontend-junior-dev/node_modules/dr-vue-echarts/packages/word-cloud/src/WordCloud.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/gerardojballesteros/Desktop/prueba videsk/frontend-junior-dev/node_modules/dr-vue-echarts/packages/word-cloud/src/WordCloud.vue","mtime":499162500000},{"path":"/Users/gerardojballesteros/Desktop/prueba videsk/frontend-junior-dev/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/gerardojballesteros/Desktop/prueba videsk/frontend-junior-dev/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/gerardojballesteros/Desktop/prueba videsk/frontend-junior-dev/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/gerardojballesteros/Desktop/prueba videsk/frontend-junior-dev/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _regeneratorRuntime from \"/Users/gerardojballesteros/Desktop/prueba videsk/frontend-junior-dev/node_modules/@babel/runtime/regenerator\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport Echart from 'echarts';\nimport isEmpty from 'lodash/isEmpty';\nimport debounce from 'lodash/debounce';\nimport { addListener, removeListener } from 'resize-detector';\nimport waldenTheme from '../../../theme/walden.json';\nimport { STRING_PROP, ARRAY_PROP, BOOLEAN_PROP } from '../../../shared/constants';\nvar DEFAULT_COLOR = waldenTheme.color;\nexport default {\n  name: 'WordCloudChart',\n  props: {\n    data: ARRAY_PROP(),\n    sizeRange: ARRAY_PROP([0, 100]),\n    theme: STRING_PROP('walden'),\n    colorRange: ARRAY_PROP(DEFAULT_COLOR),\n    drawOutOfBound: BOOLEAN_PROP(false)\n  },\n  data: function data() {\n    return {\n      el: null,\n      chart: null,\n      chartId: new Date().getTime()\n    };\n  },\n  computed: {\n    option: function option() {\n      var colorRange = this.colorRange;\n\n      if (this.data.length === 0) {\n        return {};\n      }\n\n      return {\n        tooltip: {},\n        series: [{\n          type: 'wordCloud',\n          sizeRange: this.sizeRange,\n          rotationRange: [0, 90],\n          shape: 'circle',\n          textPadding: 0,\n          autoSize: {\n            enable: true,\n            minSize: 600\n          },\n          drawOutOfBound: this.drawOutOfBound,\n          textStyle: {\n            normal: {\n              color: function color() {\n                return colorRange[Math.floor(Math.random() * colorRange.length)];\n              }\n            },\n            emphasis: {\n              shadowBlur: 10,\n              shadowColor: '#999'\n            }\n          },\n          data: this.data\n        }]\n      };\n    }\n  },\n  watch: {\n    option: {\n      deep: true,\n      handler: function handler() {\n        this.render();\n      }\n    },\n    theme: {\n      immediate: true,\n      handler: function handler(theme) {\n        var _this = this;\n\n        import(\"../../../theme/\".concat(theme, \".json\")).then(function (module) {\n          _this.registerTheme(theme, module.default);\n        });\n      }\n    }\n  },\n  mounted: function () {\n    var _mounted = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var _this2 = this;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              import('echarts-wordcloud').then(function () {\n                _this2.render();\n              });\n\n            case 1:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    function mounted() {\n      return _mounted.apply(this, arguments);\n    }\n\n    return mounted;\n  }(),\n  beforeDestroy: function beforeDestroy() {\n    removeListener(this.el);\n  },\n  methods: {\n    render: function render() {\n      var _this3 = this;\n\n      if (isEmpty(this.option)) {\n        return;\n      }\n\n      this.el = this.$refs.chart;\n      this.chart = Echart.init(this.el, this.theme);\n      this.chart.setOption(this.option, false, true);\n      addListener(this.el, debounce(function () {\n        _this3.chart.resize();\n      }, 100, {\n        leading: true\n      }));\n    },\n    registerTheme: function registerTheme(name, module) {\n      Echart.registerTheme(name, module);\n    }\n  }\n};",{"version":3,"sources":["WordCloud.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div\n    ref=\"chart\"\n    :style=\"{\n      width: '100%',\n      height: '100%'\n    }\"\n  />\n</template>\n\n<script>\nimport Echart from 'echarts';\nimport isEmpty from 'lodash/isEmpty';\nimport debounce from 'lodash/debounce';\nimport { addListener, removeListener } from 'resize-detector';\nimport waldenTheme from '../../../theme/walden.json';\nimport { STRING_PROP, ARRAY_PROP, BOOLEAN_PROP } from '../../../shared/constants'\n\nconst DEFAULT_COLOR = waldenTheme.color;\n\nexport default {\n  name: 'WordCloudChart',\n  props: {\n    data: ARRAY_PROP(),\n    sizeRange: ARRAY_PROP([0, 100]),\n    theme: STRING_PROP('walden'),\n    colorRange: ARRAY_PROP(DEFAULT_COLOR),\n    drawOutOfBound: BOOLEAN_PROP(false)\n  },\n  data() {\n    return {\n      el: null,\n      chart: null,\n      chartId: new Date().getTime(),\n    };\n  },\n  computed: {\n    option() {\n\n      const { colorRange } = this\n      if (this.data.length === 0) {\n        return {};\n      }\n      return {\n        tooltip: {\n        },\n        series: [\n          {\n            type: 'wordCloud',\n            sizeRange: this.sizeRange,\n            rotationRange: [0, 90],\n            shape: 'circle',\n            textPadding: 0,\n            autoSize: {\n              enable: true,\n              minSize: 600,\n            },\n\n            drawOutOfBound: this.drawOutOfBound,\n            \n\n            textStyle: {\n              normal: {\n                color() {\n                  return colorRange[\n                    Math.floor(Math.random() * colorRange.length)\n                  ];\n                },\n              },\n              emphasis: {\n                shadowBlur: 10,\n                shadowColor: '#999',\n              },\n            },\n            data: this.data,\n          },\n        ],\n      };\n    },\n  },\n  watch: {\n    option: {\n      deep: true,\n      handler() {\n        this.render();\n      },\n    },\n    theme: {\n      immediate: true,\n      handler(theme){\n        import(`../../../theme/${theme}.json`).then(module => {\n          this.registerTheme(theme, module.default)\n        })\n      }\n    }\n  },\n  async mounted() {\n    import('echarts-wordcloud').then(() => {\n      this.render();\n    })\n  },\n  beforeDestroy() {\n    removeListener(this.el);\n  },\n  methods: {\n    render() {\n      if (isEmpty(this.option)) {\n        return;\n      }\n      this.el = this.$refs.chart;\n      this.chart = Echart.init(this.el, this.theme);\n      this.chart.setOption(this.option, false, true);\n      addListener(this.el, debounce(() => {\n        this.chart.resize();\n      }, 100, {\n        leading: true,\n      }));\n    },\n    registerTheme(name, module) {\n      Echart.registerTheme(name, module)\n    }\n\n  },\n};\n</script>\n"],"sourceRoot":"node_modules/dr-vue-echarts/packages/word-cloud/src"}]}