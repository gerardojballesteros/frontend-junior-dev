{"remainingRequest":"/Users/gerardojballesteros/Desktop/prueba videsk/frontend-junior-dev/node_modules/babel-loader/lib/index.js!/Users/gerardojballesteros/Desktop/prueba videsk/frontend-junior-dev/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/gerardojballesteros/Desktop/prueba videsk/frontend-junior-dev/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/gerardojballesteros/Desktop/prueba videsk/frontend-junior-dev/node_modules/dr-vue-echarts/packages/line/src/Line.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/gerardojballesteros/Desktop/prueba videsk/frontend-junior-dev/node_modules/dr-vue-echarts/packages/line/src/Line.vue","mtime":499162500000},{"path":"/Users/gerardojballesteros/Desktop/prueba videsk/frontend-junior-dev/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/gerardojballesteros/Desktop/prueba videsk/frontend-junior-dev/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/gerardojballesteros/Desktop/prueba videsk/frontend-junior-dev/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/gerardojballesteros/Desktop/prueba videsk/frontend-junior-dev/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { line } from \"../../../utils/formatter\";\nimport { DEFAULT_COLORS } from \"../../../theme\";\nimport { emitEvent, registerTheme } from \"../../../utils/mixins\";\nimport { ARRAY_PROP, OBJECT_PROP, STRING_PROP, BOOLEAN_PROP, NUMBER_PROP } from \"../../../shared/constants\";\nimport flattenDeep from \"lodash/flattenDeep\";\nexport default {\n  name: \"LineChart\",\n  mixins: [emitEvent(\"el\"), registerTheme(\"chart\")],\n  props: {\n    option: OBJECT_PROP({}),\n    animation: BOOLEAN_PROP(true),\n    theme: STRING_PROP(\"walden\"),\n    data: ARRAY_PROP([]),\n    width: STRING_PROP(\"100%\"),\n    height: STRING_PROP(\"100%\"),\n    title: STRING_PROP(),\n    xName: STRING_PROP(),\n    yName: STRING_PROP(),\n    legend: BOOLEAN_PROP(true),\n    colors: ARRAY_PROP(),\n    zoom: BOOLEAN_PROP(false),\n\n    /** 同一类型数据每个柱状图颜色是否不相同 */\n    rainbow: BOOLEAN_PROP(false),\n\n    /** 水平柱状图 */\n    horizontal: BOOLEAN_PROP(false),\n\n    /** 默认缩放范围 */\n    zoomRange: ARRAY_PROP([0, 100]),\n\n    /** 图表布局设置 */\n    grid: OBJECT_PROP(),\n    labelRotate: BOOLEAN_PROP(false),\n    labelRotateDeg: NUMBER_PROP(40),\n    barMaxWidth: STRING_PROP(\"100%\"),\n    smooth: BOOLEAN_PROP(false),\n    area: BOOLEAN_PROP(false)\n  },\n  data: function data() {\n    return {\n      chart: null\n    };\n  },\n  computed: {\n    style: function style() {\n      var width = this.width,\n          height = this.height;\n      return {\n        width: width,\n        height: height\n      };\n    },\n    legendShow: function legendShow() {\n      if (this.rainbow) {\n        return false;\n      }\n\n      return this.legend;\n    },\n    gridLeft: function gridLeft() {\n      var labelMaxLength = this.getDataLabelMaxLength();\n\n      if (this.horizontal) {\n        var leftGap = labelMaxLength * 3 + 10;\n        this.zoom && (leftGap += 50);\n        return leftGap;\n      } else {\n        var valueDistance = this.getDataMaxValueLength() * 5;\n        return this.yName ? valueDistance + 10 : valueDistance;\n      }\n    },\n    gridRight: function gridRight() {\n      return this.xName ? this.xName.length * 12 + 20 : INIT_GRID_RIGHT;\n    },\n    yAxisNameLocation: function yAxisNameLocation() {\n      return this.horizontal ? \"end\" : \"middle\";\n    },\n    yAxisNameGap: function yAxisNameGap() {\n      if (this.horizontal) {\n        return 10;\n      }\n\n      return this.getDataMaxValueLength() * 10 + 10;\n    },\n    options: function options() {\n      var _this = this;\n\n      var _this$getData = this.getData(),\n          seriesData = _this$getData.seriesData,\n          labels = _this$getData.labels,\n          names = _this$getData.names;\n\n      seriesData.forEach(function (item) {\n        item.barMaxWidth = _this.barMaxWidth;\n        item.smooth = _this.smooth;\n        _this.area && (item.areaStyle = {});\n      });\n      var options = {\n        animation: this.animation,\n        grid: {\n          containLabel: true,\n          bottom: 10,\n          left: this.gridLeft\n        },\n        xAxis: {\n          name: this.xName,\n          type: this.horizontal ? \"value\" : \"category\",\n          data: labels,\n          splitLine: {\n            show: this.horizontal,\n            lineStyle: {\n              type: \"dashed\"\n            }\n          }\n        },\n        yAxis: {\n          name: this.horizontal ? this.yName : this.yName && this.yName.split(\"\").join(\"\\n\"),\n          nameLocation: this.yAxisNameLocation,\n          nameRotate: 0.1,\n          nameGap: this.yAxisNameGap,\n          type: this.horizontal ? \"category\" : \"value\",\n          data: labels,\n          splitLine: {\n            show: !this.horizontal,\n            lineStyle: {\n              type: \"dashed\"\n            }\n          }\n        },\n        legend: {\n          show: this.legendShow,\n          data: names,\n          type: \"scroll\",\n          width: \"70%\",\n          right: \"10px\"\n        },\n        tooltip: {\n          trigger: \"axis\",\n          axisPointer: {\n            type: \"cross\",\n            animation: false,\n            label: {\n              backgroundColor: \"#717b97\"\n            }\n          }\n        },\n        series: seriesData\n      };\n      this.labelRotate && this.setxNameRotate(options);\n      this.zoom && this.setZoom(options);\n      this.colors.length > 0 && this.setColor(options);\n      return _objectSpread(_objectSpread({}, options), this.option);\n    }\n  },\n  methods: {\n    getData: function getData() {\n      return line(this.data);\n    },\n    getDataLabelMaxLength: function getDataLabelMaxLength() {\n      var _this$getData2 = this.getData(),\n          labels = _this$getData2.labels;\n\n      return Math.max.apply(Math, _toConsumableArray(labels.map(function (i) {\n        return i.length;\n      })));\n    },\n    getDataMaxValueLength: function getDataMaxValueLength() {\n      var _this$getData3 = this.getData(),\n          seriesData = _this$getData3.seriesData;\n\n      var allData = flattenDeep(seriesData.map(function (item) {\n        return item.data;\n      }));\n      return \"\".concat(Math.max.apply(Math, _toConsumableArray(allData))).length;\n    },\n    setxNameRotate: function setxNameRotate(options) {\n      options.xAxis.axisLabel = _objectSpread(_objectSpread({}, options.xAxis.axisLabel), {}, {\n        interval: 0,\n        rotate: this.labelRotateDeg\n      });\n    },\n    setZoom: function setZoom(options) {\n      var slider = this.horizontal ? _objectSpread(_objectSpread({}, slider), {}, {\n        yAxisIndex: 0,\n        top: 30,\n        bottom: 30,\n        left: 20\n      }) : {\n        type: \"slider\",\n        bottom: 0\n      };\n      options.dataZoom = [{\n        disabled: this.horizontal,\n        type: \"inside\",\n        start: this.zoomRange[0] || 0,\n        end: this.zoomRange[1] || 100\n      }, _objectSpread({}, slider)];\n      options.grid = _objectSpread(_objectSpread({}, options.grid), {}, {\n        bottom: 40\n      });\n    },\n    setColor: function setColor(options) {\n      options.color = this.colors;\n    }\n  }\n};",{"version":3,"sources":["Line.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <component\n    v-if=\"chart\"\n    :is=\"chart\"\n    autoresize\n    :theme=\"theme\"\n    :options=\"options\"\n    :style=\"style\"\n  />\n</template>\n\n<script>\nimport { line } from \"../../../utils/formatter\";\nimport { DEFAULT_COLORS } from \"../../../theme\";\nimport { emitEvent, registerTheme } from \"../../../utils/mixins\";\nimport {\n  ARRAY_PROP,\n  OBJECT_PROP,\n  STRING_PROP,\n  BOOLEAN_PROP,\n  NUMBER_PROP\n} from \"../../../shared/constants\";\nimport flattenDeep from \"lodash/flattenDeep\";\n\nexport default {\n  name: \"LineChart\",\n  mixins: [emitEvent(\"el\"), registerTheme(\"chart\")],\n\n  props: {\n    option: OBJECT_PROP({}),\n    animation: BOOLEAN_PROP(true),\n    theme: STRING_PROP(\"walden\"),\n    data: ARRAY_PROP([]),\n    width: STRING_PROP(\"100%\"),\n    height: STRING_PROP(\"100%\"),\n    title: STRING_PROP(),\n    xName: STRING_PROP(),\n    yName: STRING_PROP(),\n    legend: BOOLEAN_PROP(true),\n    colors: ARRAY_PROP(),\n    zoom: BOOLEAN_PROP(false),\n    /** 同一类型数据每个柱状图颜色是否不相同 */\n    rainbow: BOOLEAN_PROP(false),\n    /** 水平柱状图 */\n    horizontal: BOOLEAN_PROP(false),\n    /** 默认缩放范围 */\n    zoomRange: ARRAY_PROP([0, 100]),\n    /** 图表布局设置 */\n    grid: OBJECT_PROP(),\n    labelRotate: BOOLEAN_PROP(false),\n    labelRotateDeg: NUMBER_PROP(40),\n    barMaxWidth: STRING_PROP(\"100%\"),\n    smooth: BOOLEAN_PROP(false),\n    area: BOOLEAN_PROP(false)\n  },\n  data() {\n    return {\n      chart: null\n    };\n  },\n  computed: {\n    style() {\n      const { width, height } = this;\n      return {\n        width,\n        height\n      };\n    },\n    legendShow() {\n      if (this.rainbow) {\n        return false;\n      }\n      return this.legend;\n    },\n    gridLeft() {\n      const labelMaxLength = this.getDataLabelMaxLength();\n      if (this.horizontal) {\n        let leftGap = labelMaxLength * 3 + 10;\n        this.zoom && (leftGap += 50);\n        return leftGap;\n      } else {\n        let valueDistance = this.getDataMaxValueLength() * 5;\n        return this.yName ? valueDistance + 10 : valueDistance;\n      }\n    },\n    gridRight() {\n      return this.xName ? this.xName.length * 12 + 20 : INIT_GRID_RIGHT;\n    },\n    yAxisNameLocation() {\n      return this.horizontal ? \"end\" : \"middle\";\n    },\n    yAxisNameGap() {\n      if (this.horizontal) {\n        return 10;\n      }\n      return this.getDataMaxValueLength() * 10 + 10;\n    },\n    options() {\n      const { seriesData, labels, names } = this.getData();\n      seriesData.forEach(item => {\n        item.barMaxWidth = this.barMaxWidth;\n        item.smooth = this.smooth;\n        this.area && (item.areaStyle = {});\n      });\n      let options = {\n        animation: this.animation,\n        grid: {\n          containLabel: true,\n          bottom: 10,\n          left: this.gridLeft\n        },\n        xAxis: {\n          name: this.xName,\n          type: this.horizontal ? \"value\" : \"category\",\n          data: labels,\n          splitLine: {\n            show: this.horizontal,\n            lineStyle: {\n              type: \"dashed\"\n            }\n          }\n        },\n        yAxis: {\n          name: this.horizontal\n            ? this.yName\n            : this.yName && this.yName.split(\"\").join(\"\\n\"),\n          nameLocation: this.yAxisNameLocation,\n          nameRotate: 0.1,\n          nameGap: this.yAxisNameGap,\n          type: this.horizontal ? \"category\" : \"value\",\n          data: labels,\n\n          splitLine: {\n            show: !this.horizontal,\n            lineStyle: {\n              type: \"dashed\"\n            }\n          }\n        },\n        legend: {\n          show: this.legendShow,\n          data: names,\n          type: \"scroll\",\n          width: \"70%\",\n          right: \"10px\"\n        },\n        tooltip: {\n          trigger: \"axis\",\n          axisPointer: {\n            type: \"cross\",\n            animation: false,\n            label: {\n              backgroundColor: \"#717b97\"\n            }\n          }\n        },\n        series: seriesData\n      };\n      this.labelRotate && this.setxNameRotate(options);\n      this.zoom && this.setZoom(options);\n      this.colors.length > 0 && this.setColor(options);\n\n      return {\n        ...options,\n        ...this.option\n      };\n    }\n  },\n  methods: {\n    getData() {\n      return line(this.data);\n    },\n    getDataLabelMaxLength() {\n      const { labels } = this.getData();\n      return Math.max(...labels.map(i => i.length));\n    },\n    getDataMaxValueLength() {\n      const { seriesData } = this.getData();\n      const allData = flattenDeep(seriesData.map(item => item.data));\n      return `${Math.max(...allData)}`.length;\n    },\n    setxNameRotate(options) {\n      options.xAxis.axisLabel = {\n        ...options.xAxis.axisLabel,\n        interval: 0,\n        rotate: this.labelRotateDeg\n      };\n    },\n    setZoom(options) {\n      let slider = this.horizontal\n        ? {\n            ...slider,\n            yAxisIndex: 0,\n            top: 30,\n            bottom: 30,\n            left: 20\n          }\n        : {\n            type: \"slider\",\n            bottom: 0\n          };\n      options.dataZoom = [\n        {\n          disabled: this.horizontal,\n          type: \"inside\",\n          start: this.zoomRange[0] || 0,\n          end: this.zoomRange[1] || 100\n        },\n        {\n          ...slider\n        }\n      ];\n      options.grid = {\n        ...options.grid,\n        bottom: 40\n      };\n    },\n    setColor(options) {\n      options.color = this.colors;\n    }\n  }\n};\n</script>\n\n<style></style>\n"],"sourceRoot":"node_modules/dr-vue-echarts/packages/line/src"}]}