{"remainingRequest":"/Users/gerardojballesteros/Desktop/prueba videsk/frontend-junior-dev/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/gerardojballesteros/Desktop/prueba videsk/frontend-junior-dev/node_modules/dr-vue-echarts/packages/map/src/Map.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/gerardojballesteros/Desktop/prueba videsk/frontend-junior-dev/node_modules/dr-vue-echarts/packages/map/src/Map.vue","mtime":499162500000},{"path":"/Users/gerardojballesteros/Desktop/prueba videsk/frontend-junior-dev/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/gerardojballesteros/Desktop/prueba videsk/frontend-junior-dev/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/gerardojballesteros/Desktop/prueba videsk/frontend-junior-dev/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/gerardojballesteros/Desktop/prueba videsk/frontend-junior-dev/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport 'echarts';\nimport 'echarts/map/js/china';\nimport 'echarts/extension/bmap/bmap';\nimport vchart from 'vue-echarts';\nimport waldenTheme from '../../../theme/walden.json'\nvchart.registerTheme('walden', waldenTheme)\n\nimport { PROVINCE_DIR, STRING_PROP, OBJECT_PROP, ARRAY_PROP, NUMBER_PROP } from '../../../shared/constants';\n\n\nconst provinces = Object.values(PROVINCE_DIR);\n\nfunction importProvinceMap(name) {\n  const fileName = PROVINCE_DIR[name];\n  fileName && require(`echarts/map/js/province/${fileName}`);\n}\n\n\nfunction importAllProvinceMap() {\n  provinces.forEach((name) => {\n    importProvinceMap(name);\n  });\n}\n\n\nexport default {\n  name: 'MapChart',\n  components: {\n    vchart,\n  },\n  props: {\n    theme: STRING_PROP('walden'),\n    option: OBJECT_PROP(),\n    width: STRING_PROP('100%'),\n    height: STRING_PROP('100%'),\n    title: STRING_PROP(),\n    data: ARRAY_PROP(),\n    mapType: STRING_PROP('map'),\n    titleColor: STRING_PROP('#000'),\n    titlePosition: STRING_PROP('center'),\n    areaColor: STRING_PROP('#eaeaea'),\n    borderColor: STRING_PROP('#999999'),\n    name: {\n      type: String,\n      default: 'china',\n    },\n    roam: Boolean,\n    zoom: {\n      type: Number,\n      default: 1,\n    },\n    center: Array,\n    autoTooltip: Boolean,\n    lowColor: {\n      type: String,\n      default: '#ffd65a',\n    },\n    highColor: {\n      type: String,\n      default: '#fa675c',\n    },\n    labelColor: {\n      type: String,\n      default: '#333',\n    },\n    visualMapText: {\n      type: Array,\n      default() {\n        return [];\n      },\n    },\n  },\n  data() {\n    return {\n      chart: null,\n    };\n  },\n  computed: {\n    style() {\n      const { width, height } = this;\n      return {\n        width,\n        height,\n      };\n    },\n    options() {\n      const { data } = this;\n      const MIN = data.length > 0\n        ? data.length > 1\n          ? Math.min(...(data.map(i => i.value)))\n          : 0\n        : 0;\n      const MAX = data.length > 0\n        ? Math.max(...(data.map(i => i.value)))\n        : 0;\n      const initVisualMapText = [MAX, MIN];\n      const options = {\n        visualMap: {\n          type: 'continuous',\n          orient: 'horizontal',\n          itemWidth: 10,\n          itemHeight: 80,\n          min: MIN,\n          max: MAX,\n          text: this.visualMapText.length > 0 \n            ? this.visualMapText \n            : initVisualMapText,\n\n          // inRange: {\n          //   color: [this.lowColor, this.highColor],\n          // },\n          textStyle: {\n            color: this.titleColor,\n          },\n          right: '15px',\n          bottom: '15px',\n        },\n        series: [\n          {\n            name: this.name,\n            type: 'map',\n            mapType: this.mapType,\n            roam: this.roam,\n            itemStyle: {\n              normal: {\n                areaColor: this.areaColor,\n                borderColor: this.borderColor,\n                label: {\n                  show(params) {\n                    return true;\n                  },\n                  textStyle: {\n                    color: this.labelColor,\n                  },\n                },\n              },\n              emphasis: {\n                label: { show: true },\n              },\n\n            },\n            label: {\n              emphasis: {\n                textStyle: {\n                  color: this.labelColor,\n                },\n              },\n            },\n            data,\n            zlevel: 1,\n\n          },\n        ],\n      };\n      return {\n        ...options,\n        ...this.option,\n      };\n    },\n  },\n  watch: {\n    mapType: {\n      immediate: true,\n      handler(type) {\n        importProvinceMap(type);\n      },\n    },\n  },\n  mounted() {\n    this.init();\n  },\n\n  methods: {\n    init() {\n      const { el } = this.$refs;\n      this.chart = el.chart;\n      Object.keys(this.$listeners).forEach((event) => {\n        if (event.indexOf('zr:') === 0) {\n          el.chart.on(event.slice(3), (e) => {\n            this.$emit(event, e);\n          });\n        } else {\n          el.chart.on(event, (e) => {\n            this.$emit(event, e);\n          });\n        }\n      });\n    },\n\n  },\n};\n",{"version":3,"sources":["Map.vue"],"names":[],"mappings":";;;;;;;;;;;;AAYA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;AAGA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA","file":"Map.vue","sourceRoot":"node_modules/dr-vue-echarts/packages/map/src","sourcesContent":["<template>\n  <vchart\n    ref=\"el\"\n    autoresize\n    :options=\"options\"\n    :style=\"style\"\n    v-bind=\"$attrs\"\n    :theme=\"theme\"\n  />\n</template>\n\n<script>\nimport 'echarts';\nimport 'echarts/map/js/china';\nimport 'echarts/extension/bmap/bmap';\nimport vchart from 'vue-echarts';\nimport waldenTheme from '../../../theme/walden.json'\nvchart.registerTheme('walden', waldenTheme)\n\nimport { PROVINCE_DIR, STRING_PROP, OBJECT_PROP, ARRAY_PROP, NUMBER_PROP } from '../../../shared/constants';\n\n\nconst provinces = Object.values(PROVINCE_DIR);\n\nfunction importProvinceMap(name) {\n  const fileName = PROVINCE_DIR[name];\n  fileName && require(`echarts/map/js/province/${fileName}`);\n}\n\n\nfunction importAllProvinceMap() {\n  provinces.forEach((name) => {\n    importProvinceMap(name);\n  });\n}\n\n\nexport default {\n  name: 'MapChart',\n  components: {\n    vchart,\n  },\n  props: {\n    theme: STRING_PROP('walden'),\n    option: OBJECT_PROP(),\n    width: STRING_PROP('100%'),\n    height: STRING_PROP('100%'),\n    title: STRING_PROP(),\n    data: ARRAY_PROP(),\n    mapType: STRING_PROP('map'),\n    titleColor: STRING_PROP('#000'),\n    titlePosition: STRING_PROP('center'),\n    areaColor: STRING_PROP('#eaeaea'),\n    borderColor: STRING_PROP('#999999'),\n    name: {\n      type: String,\n      default: 'china',\n    },\n    roam: Boolean,\n    zoom: {\n      type: Number,\n      default: 1,\n    },\n    center: Array,\n    autoTooltip: Boolean,\n    lowColor: {\n      type: String,\n      default: '#ffd65a',\n    },\n    highColor: {\n      type: String,\n      default: '#fa675c',\n    },\n    labelColor: {\n      type: String,\n      default: '#333',\n    },\n    visualMapText: {\n      type: Array,\n      default() {\n        return [];\n      },\n    },\n  },\n  data() {\n    return {\n      chart: null,\n    };\n  },\n  computed: {\n    style() {\n      const { width, height } = this;\n      return {\n        width,\n        height,\n      };\n    },\n    options() {\n      const { data } = this;\n      const MIN = data.length > 0\n        ? data.length > 1\n          ? Math.min(...(data.map(i => i.value)))\n          : 0\n        : 0;\n      const MAX = data.length > 0\n        ? Math.max(...(data.map(i => i.value)))\n        : 0;\n      const initVisualMapText = [MAX, MIN];\n      const options = {\n        visualMap: {\n          type: 'continuous',\n          orient: 'horizontal',\n          itemWidth: 10,\n          itemHeight: 80,\n          min: MIN,\n          max: MAX,\n          text: this.visualMapText.length > 0 \n            ? this.visualMapText \n            : initVisualMapText,\n\n          // inRange: {\n          //   color: [this.lowColor, this.highColor],\n          // },\n          textStyle: {\n            color: this.titleColor,\n          },\n          right: '15px',\n          bottom: '15px',\n        },\n        series: [\n          {\n            name: this.name,\n            type: 'map',\n            mapType: this.mapType,\n            roam: this.roam,\n            itemStyle: {\n              normal: {\n                areaColor: this.areaColor,\n                borderColor: this.borderColor,\n                label: {\n                  show(params) {\n                    return true;\n                  },\n                  textStyle: {\n                    color: this.labelColor,\n                  },\n                },\n              },\n              emphasis: {\n                label: { show: true },\n              },\n\n            },\n            label: {\n              emphasis: {\n                textStyle: {\n                  color: this.labelColor,\n                },\n              },\n            },\n            data,\n            zlevel: 1,\n\n          },\n        ],\n      };\n      return {\n        ...options,\n        ...this.option,\n      };\n    },\n  },\n  watch: {\n    mapType: {\n      immediate: true,\n      handler(type) {\n        importProvinceMap(type);\n      },\n    },\n  },\n  mounted() {\n    this.init();\n  },\n\n  methods: {\n    init() {\n      const { el } = this.$refs;\n      this.chart = el.chart;\n      Object.keys(this.$listeners).forEach((event) => {\n        if (event.indexOf('zr:') === 0) {\n          el.chart.on(event.slice(3), (e) => {\n            this.$emit(event, e);\n          });\n        } else {\n          el.chart.on(event, (e) => {\n            this.$emit(event, e);\n          });\n        }\n      });\n    },\n\n  },\n};\n</script>\n"]}]}